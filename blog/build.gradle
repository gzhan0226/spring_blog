plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.3'
	id 'io.spring.dependency-management' version '1.1.6'
}

group = 'blogExample'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-devtools' //이것을 통해 코드 수정시 컴파일만하면 변경 업데이트 해줌
	//쿼리 파라미터를 로그로 남기는 외부 라이브러리
	implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.9.0'

	// Hibernate5JakartaModule 등록
	implementation 'com.fasterxml.jackson.datatype:jackson-datatype-hibernate5-jakarta'

	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.h2database:h2'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	//JUnit4 추가
	testImplementation("org.junit.vintage:junit-vintage-engine") {
		exclude group: "org.hamcrest", module: "hamcrest-core"
	}

	//Querydsl 추가
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"


	/*//스프링 시큐리티를 사용하기 위한 스타터 추가
	implementation 'org.springframework.boot:spring-boot-starter-security'
	//타임리프 에서 스프링 시큐리티를 사용하기 위한 의존성추가
	implementation 'org.thymeleaf.extras::thymeleaf-extras-springsecurity6'
	//스프링 시큐리티를 테스트 하기 위한 의존성 추가
	testImplementation 'org.springframework.security:spring-security-test'*/

	/*//JWT라이브러리
	implementation 'io.jsonwebtoken:jjwt:0.9.1' //자바 JWT 라이브러리*/
	implementation 'javax.xml.bind:jaxb-api:2.3.1' //XML 문서와 Java 객체 간 매핑 자동화

}
//junit
tasks.named('test') {
	useJUnitPlatform()
}
//querydsl 추가
def querydslDir = 'src/main/generated'
clean {
	delete file('src/main/generated')
}
tasks.withType(JavaCompile){
	options.generatedSourceOutputDirectory=file(querydslDir)
}
